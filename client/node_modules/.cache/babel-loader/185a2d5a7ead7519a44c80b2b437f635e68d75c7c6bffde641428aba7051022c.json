{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nivedha B\\\\OneDrive\\\\Desktop\\\\deployed-app\\\\client\\\\src\\\\components\\\\Module.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Module = ({\n  mode,\n  setShowModule,\n  task\n}) => {\n  _s();\n  const editMode = mode === 'edit'; // Determine edit mode based on prop 'mode'\n\n  const [data, setData] = useState({\n    user_email: editMode ? task.user_email : \"ni@gmail.com\",\n    title: editMode ? task.title : \"\",\n    progress: editMode ? task.progress : 50,\n    date: editMode ? \"\" : new Date()\n  });\n  const postData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8000/to`, {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.status === 200) {\n        setShowModule(false);\n        // Assuming getData is a function passed as a prop to fetch updated data\n        // Replace getData with the correct function that fetches updated data\n        // getData();\n      }\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const editData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8000/to/${task.id}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.status === 200) {\n        setShowModule(false);\n        // Assuming getData is a function passed as a prop to fetch updated data\n        // Replace getData with the correct function that fetches updated data\n        // getData();\n      }\n      console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"let's \", mode, \" your task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModule(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editMode ? editData : postData,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          maxLength: 30,\n          placeholder: \"Your task goes here\",\n          name: \"title\",\n          value: data.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"range\",\n          children: \"Drag to select your current progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"range\",\n          id: \"range\",\n          min: \"0\",\n          max: \"100\",\n          name: \"progress\",\n          value: data.progress,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: mode,\n          type: \"submit\",\n          value: editMode ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Module, \"I9GAqNbpnwrYX4SltXeqHi5xYXc=\");\n_c = Module;\nexport default Module;\nvar _c;\n$RefreshReg$(_c, \"Module\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Module","mode","setShowModule","task","_s","editMode","data","setData","user_email","title","progress","date","Date","postData","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","console","log","err","editData","id","error","handleChange","name","value","target","prevData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","required","maxLength","placeholder","onChange","htmlFor","type","min","max","_c","$RefreshReg$"],"sources":["C:/Users/Nivedha B/OneDrive/Desktop/deployed-app/client/src/components/Module.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Module = ({ mode, setShowModule, task }) => {\r\n  const editMode = mode === 'edit'; // Determine edit mode based on prop 'mode'\r\n  \r\n  const [data, setData] = useState({\r\n    user_email: editMode ? task.user_email : \"ni@gmail.com\",\r\n    title: editMode ? task.title : \"\",\r\n    progress: editMode ? task.progress : 50,\r\n    date: editMode ? \"\" : new Date()\r\n  });\r\n\r\n  const postData = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/to`, {\r\n        method: \"POST\",\r\n        headers: { 'Content-type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n      });\r\n      if (response.status === 200) {\r\n        setShowModule(false);\r\n        // Assuming getData is a function passed as a prop to fetch updated data\r\n        // Replace getData with the correct function that fetches updated data\r\n        // getData();\r\n      }\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  const editData = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/to/${task.id}`, {\r\n        method: \"PUT\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n      });\r\n      if (response.status === 200) {\r\n        setShowModule(false);\r\n        // Assuming getData is a function passed as a prop to fetch updated data\r\n        // Replace getData with the correct function that fetches updated data\r\n        // getData();\r\n      }\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"modal\">\r\n        <div className=\"form-title-container\">\r\n          <h3>let's {mode} your task</h3>\r\n          <button onClick={() => setShowModule(false)}>X</button>\r\n        </div>\r\n        <form onSubmit={editMode ? editData : postData}>\r\n          <input\r\n            required\r\n            maxLength={30}\r\n            placeholder=\"Your task goes here\"\r\n            name=\"title\"\r\n            value={data.title}\r\n            onChange={handleChange}\r\n          />\r\n          <br/>\r\n          <label htmlFor=\"range\">Drag to select your current progress</label>\r\n          <input \r\n            required\r\n            type=\"range\"\r\n            id=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            name=\"progress\"\r\n            value={data.progress}\r\n            onChange={handleChange}\r\n          />\r\n          <input className={mode} type=\"submit\" value={editMode ? 'Update' : 'Create'} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Module;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}