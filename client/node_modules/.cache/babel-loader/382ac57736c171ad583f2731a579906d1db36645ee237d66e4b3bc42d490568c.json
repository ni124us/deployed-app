{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nivedha B\\\\OneDrive\\\\Desktop\\\\deployed-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ListHead from './components/ListHead';\nimport Listcontent from './components/Listcontent';\nimport Auth from './components/Auth'; // Ensure correct path and filename for Auth component\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cookies, setCookies, removeCookies] = useCookies(['userEmail', 'AuthToken']);\n  const userEmail = cookies.userEmail;\n  const authToken = cookies.AuthToken;\n  const [tasks, setTasks] = useState(null);\n  useEffect(() => {\n    const getdata = async () => {\n      try {\n        if (authToken && userEmail) {\n          const response = await fetch(`${process.env.REACT_APP_SERVERURL}/to/${userEmail}`);\n          if (response.ok) {\n            const json = await response.json();\n            setTasks(json);\n          } else {\n            console.error('Failed to fetch data:', response.status);\n            // Handle error here if needed\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        // Handle error here if needed\n      }\n    };\n    getdata();\n  }, [authToken, userEmail]); // Fetch data when authToken or userEmail changes\n\n  // Sorting tasks by date\n  const sortedTasks = tasks && [...tasks].sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!authToken && /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this), authToken && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListHead, {\n        listname: '🏝️ HOLIDAY TICK LIST',\n        getData: getdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-email\",\n        children: [\"Welcome Back \", userEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), sortedTasks && sortedTasks.map(task => /*#__PURE__*/_jsxDEV(Listcontent, {\n        task: task,\n        getData: getdata\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"copyright\",\n      children: \"\\xA9 Creative Coding LLC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pt6ZtUWWeNeulWSWaEL/wPMHvsg=\", false, function () {\n  return [useCookies];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ListHead","Listcontent","Auth","useCookies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cookies","setCookies","removeCookies","userEmail","authToken","AuthToken","tasks","setTasks","getdata","response","fetch","process","env","REACT_APP_SERVERURL","ok","json","console","error","status","err","sortedTasks","sort","a","b","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","listname","getData","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/Nivedha B/OneDrive/Desktop/deployed-app/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ListHead from './components/ListHead';\nimport Listcontent from './components/Listcontent';\nimport Auth from './components/Auth'; // Ensure correct path and filename for Auth component\nimport { useCookies } from 'react-cookie';\n\nconst App = () => {\n  const [cookies, setCookies, removeCookies] = useCookies(['userEmail', 'AuthToken']);\n  const userEmail = cookies.userEmail;\n  const authToken = cookies.AuthToken;\n  const [tasks, setTasks] = useState(null);\n\n  useEffect(() => {\n    const getdata = async () => {\n      try {\n        if (authToken && userEmail) {\n          const response = await fetch(`${process.env.REACT_APP_SERVERURL}/to/${userEmail}`);\n          if (response.ok) {\n            const json = await response.json();\n            setTasks(json);\n          } else {\n            console.error('Failed to fetch data:', response.status);\n            // Handle error here if needed\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        // Handle error here if needed\n      }\n    };\n\n    getdata();\n  }, [authToken, userEmail]); // Fetch data when authToken or userEmail changes\n\n  // Sorting tasks by date\n  const sortedTasks = tasks && [...tasks].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  return (\n    <div className=\"app\">\n      {!authToken && <Auth />}\n      {authToken && (\n        <>\n          <ListHead listname={'🏝️ HOLIDAY TICK LIST'} getData={getdata} /> {/* Pass getData function as prop */}\n          <p className=\"user-email\">Welcome Back {userEmail}</p>\n          {sortedTasks && sortedTasks.map((task) => <Listcontent key={task.id} task={task} getData={getdata} />)}\n        </>\n      )}\n      <p className=\"copyright\">© Creative Coding LLC</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}